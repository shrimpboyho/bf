{"ts":1379208760967,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main ( int argc, char* argv[] ){\n\n\tint toCFlag = 0;\n\tint v = 0;\n\tfor(v; v < argc; v++){\n\t\tif(argv[v] == \"-c\"){\n\t\t\ttoCFlag = 1;\n\t\t}\n\t}\n\t\n\tFILE* s = fopen(argv[1],\"r\");\n\tFILE* o = fopen(\"a.c\",\"w\");\n\tfprintf(o, \"#include <stdio.h>\\n\");\n\tfprintf(o, \"#include <stdlib.h>\\n\");\n\tfprintf(o, \"#include <string.h>\\n\");\n\tfprintf(o, \"int main( void ){\\n\");\n\tfprintf(o, \"\\tchar* codep = \\\"\");\n\t\n\tint i = 0;\n\n\tfor(;;){\n\n\t\tchar p = fgetc(s);\n\t\tif(p == EOF){\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tif(p != '\\n'){\n\t\t\tfprintf(o,\"%c\",p);\n\t\t\ti++;\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n\t/* Close files */\n\n\tfclose(s);\n\n\tfprintf(o, \"\\\";\\n\\tchar* mem = (char*) malloc(sizeof(char) * 600);\");\n\tfprintf(o, \"\\n\\tint i; // instruction pointer\");\n\tfprintf(o, \"\\n\\tchar code[%d];\", i);\n\tfprintf(o, \"\\n\\tstrcpy(code,codep);\");\n\tfprintf(o, \"\\n\\tint ptr = 0; // memory pointer\");\n\tfprintf(o, \"\\n\\tfor(i = 0; i < %d; i++){\", i);\n\tfprintf(o, \"\\n\\t\\tif(code[i] == '>') ptr++;\");\n\tfprintf(o, \"\\n\\t\\tif(code[i] == '<') ptr--;\");\n\tfprintf(o, \"\\n\\t\\tif(code[i] == '+') *(mem + ptr) = *(mem + ptr) + 1;\");\n\tfprintf(o, \"\\n\\t\\tif(code[i] == '-') *(mem + ptr) = *(mem + ptr) - 1;\");\n\tfprintf(o, \"\\n\\t\\tif(code[i] == '.') putchar(*(mem + ptr));\");\n\tfprintf(o, \"\\n\\t\\tif(code[i] == ',') *(mem + ptr) = getchar();\");\n\tfprintf(o, \"\\n\\t\\tif(code[i] == '['){\"); \n\tfprintf(o, \"\\n\\t\\t\\tif(*(mem + ptr) == 0){\");\n\tfprintf(o, \"\\n\\t\\t\\t\\twhile((code[i] != ']')){\");\n\tfprintf(o, \"\\n\\t\\t\\t\\t\\ti++;\");\n\tfprintf(o, \"\\n\\t\\t\\t\\t}\");\n\tfprintf(o, \"\\n\\t\\t\\t\\ti++;\");\n\tfprintf(o, \"\\n\\t\\t\\t}\"); \n\tfprintf(o, \"\\n\\t\\t}\");\n\tfprintf(o, \"\\n\\t\\tif(code[i] == ']'){\"); \n\tfprintf(o, \"\\n\\t\\t\\tif(*(mem + ptr) != 0){\");\n\tfprintf(o, \"\\n\\t\\t\\t\\twhile((code[i] != '[')){\");\n\tfprintf(o, \"\\n\\t\\t\\t\\t\\ti--;\");\n\tfprintf(o, \"\\n\\t\\t\\t\\t}\");\n\tfprintf(o, \"\\n\\t\\t\\t\\ti--;\");\n\tfprintf(o, \"\\n\\t\\t\\t}\"); \n\tfprintf(o, \"\\n\\t\\t}\");\t\n\tfprintf(o, \"\\n\\t}\");\n\tfprintf(o, \"\\n\\treturn 0;\\n}\");\n\n\tfclose(o);\n\t\n\t/* Compile */\n\t\n\tchar command[60];\n\tstrcat(command,\"gcc a.c -o \");\n\tstrcat(command,argv[2]);\n\tsystem(command);\n\n\tif(toCFlag == 1){\n\t\tremove(\"a.c\");\n\t}\n\n\treturn 0;\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":2097}]],"length":2097}
{"contributors":[],"silentsave":false,"ts":1379208842073,"patch":[[{"diffs":[[0,"f(p "],[-1,"!= '\\n"],[1,"== '<'|| p == '>'|| p == '.'|| p == ','|| p == '['|| p == ']'|| p == '+'|| p == '-"],[0,"'){\n"]],"start1":527,"start2":527,"length1":14,"length2":90}]],"length":2173,"saved":false}
